{
  "name": "Process killing",
  "platforms": [
    "macos"
  ],
  "description": "List running processes with detailed stats (like CPU, memory, threads) and safely kill processes with optional force mode and confirmation",
  "icon": "icon.png",
  "type": "extension", 
  "category": "Utilities",
  "tags": [
    "kill",
    "process"
  ],
  "screenshots": [
    {
      "title": "Process killing",
      "url": "screenshot.png"
    }
  ],
  "commands": [
    {
      "name": "Kill Process",
      "description": "Kill a running process by its process ID or name, with optional force mode. Confirmation required.",
      "icon": "icon.png",
      "type": "command",
      "action": {
        "exec": "osascript",
        "args": [
          "-e",
          "set target to text returned of (display dialog \"Enter Process ID or Name to kill:\" default answer \"\")",
          "-e",
          "if target is \"\" then",
          "-e",
          "display dialog \"No input provided.\" buttons {\"OK\"} default button \"OK\"",
          "-e",
          "return",
          "-e",
          "end if",
          "-e",
          "set forceMode to button returned of (display dialog \"Kill with force (-9)?\" buttons {\"Normal\", \"Force\"} default button \"Normal\")",
          "-e",
          "set killCmds to {}",
          "-e",
          "set selectedList to {}",
          "-e",
          "set inputWasPID to false",
          "-e",
          "try",
          "-e",
          "set pidNum to target as integer",
          "-e",
          "set processList to {\"PID \" & pidNum}",
          "-e",
          "set selectedList to {pidNum as string}",
          "-e",
          "set inputWasPID to true",
          "-e",
          "on error",
          "-e",
          "try",
          "-e",
          "set processList to paragraphs of (do shell script \"ps -axo pid,comm | grep -i \" & quoted form of target & \" | grep -v grep\")",
          "-e",
          "on error",
          "-e",
          "set processList to {}",
          "-e",
          "end try",
          "-e",
          "if (count of processList) = 0 then",
          "-e",
          "display dialog \"No processes found for: \" & target buttons {\"OK\"} default button \"OK\"",
          "-e",
          "return",
          "-e",
          "end if",
          "-e",
          "set selectedList to choose from list processList with prompt \"Select process(es) to kill:\" with multiple selections allowed",
          "-e",
          "if selectedList is false then return",
          "-e",
          "end try",
          "-e",
          "repeat with procLine in selectedList",
          "-e",
          "set pidText to word 1 of procLine",
          "-e",
          "try",
          "-e",
          "do shell script \"kill -0 \" & pidText",
          "-e",
          "if forceMode is \"Force\" then",
          "-e",
          "set end of killCmds to \"kill -9 \" & pidText",
          "-e",
          "else",
          "-e",
          "set end of killCmds to \"kill \" & pidText",
          "-e",
          "end if",
          "-e",
          "on error",
          "-e",
          "end try",
          "-e",
          "end repeat",
          "-e",
          "if (count of killCmds) = 0 then",
          "-e",
          "display dialog \"No valid processes left to kill.\" buttons {\"OK\"} default button \"OK\"",
          "-e",
          "return",
          "-e",
          "end if",
          "-e",
          "if inputWasPID then",
          "-e",
          "set confirmMsg to \"Are you sure you want to kill process ID \" & target & \"?\"",
          "-e",
          "else",
          "-e",
          "set confirmMsg to \"Are you sure you want to kill processes matching \\\"\" & target & \"\\\"?\"",
          "-e",
          "end if",
          "-e",
          "set confirm to button returned of (display dialog confirmMsg buttons {\"Cancel\", \"Yes\"} default button \"Cancel\")",
          "-e",
          "if confirm is \"Yes\" then",
          "-e",
          "set errorList to {}",
          "-e",
          "repeat with cmd in killCmds",
          "-e",
          "try",
          "-e",
          "do shell script cmd with administrator privileges",
          "-e",
          "on error errMsg",
          "-e",
          "if errMsg does not contain \"No such process\" then",
          "e",
          "set end of errorList to errMsg",
          "e",
          "end if",
          "-e",
          "end try",
          "-e",
          "end repeat",
          "-e",
          "if (count of errorList) = 0 then",
          "-e",
          "display dialog \"Selected processes terminated successfully.\" buttons {\"OK\"} default button \"OK\"",
          "-e",
          "else",
          "-e",
          "display dialog \"Some errors occurred:\\n\" & (errorList as string) buttons {\"OK\"} default button \"OK\"",
          "-e",
          "end if",
          "-e",
          "end if"
        ]
      }
    },
    {
      "name": "List Processes",
      "description": "List all running processes, with optional filtering by search term and sorting by memory or other fields.",
      "icon": "icon.png",
      "type": "command",
      "action": {
        "exec": "osascript",
        "args": [
          "-e",
          "on run",
          "-e",
          "set searchTerm to text returned of (display dialog \"Enter search term (leave empty for all):\" default answer \"\")",
          "-e",
          "my showProcesses(searchTerm)",
          "-e",
          "end run",
          "-e",
          "on showProcesses(searchTerm)",
          "-e",
          "set resultList to {}",
          "-e",
          "try",
          "-e",
          "set topList to paragraphs of (do shell script \"top -l 1 -stats pid,command,cpu,time,threads,ports,rsize,vsize,mem | tail -n +11 | head -n 60\")",
          "-e",
          "on error",
          "-e",
          "set topList to {}",
          "-e",
          "end try",
          "-e",
          "repeat with procLine in topList",
          "-e",
          "if searchTerm = \"\" or ((procLine as string) contains searchTerm) then",
          "-e",
          "set end of resultList to procLine",
          "-e",
          "end if",
          "-e",
          "end repeat",
          "-e",
          "if (count of resultList) = 0 then",
          "-e",
          "display dialog \"No processes found.\"",
          "-e",
          "return",
          "-e",
          "end if",
          "-e",
          "set resultList to {\"⟳ Refresh\"} & resultList",
          "-e",
          "set userChoice to choose from list resultList with prompt \"Matching processes (click ⟳ Refresh to update):\" default items {item 2 of resultList} without multiple selections allowed",
          "-e",
          "if userChoice is false then",
          "-e",
          "return",
          "-e",
          "else if item 1 of userChoice = \"⟳ Refresh\" then",
          "-e",
          "my showProcesses(searchTerm)",
          "-e",
          "else",
          "-e",
          "display dialog \"You selected: \" & (item 1 of userChoice)",
          "-e",
          "end if",
          "-e",
          "end showProcesses"
        ]
      }
    }
  ]
}